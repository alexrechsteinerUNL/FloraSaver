<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
    x:Class="FloraSaver.PlantDetailsPage"
    xmlns:viewmodel="clr-namespace:FloraSaver.ViewModels"
    x:DataType="viewmodel:PlantDetailsViewModel"
    Title="{Binding Plant.GivenName}">


    <VerticalStackLayout Padding="10">
        <Frame BackgroundColor="Black" Padding="20" HeightRequest="660">
            <Grid RowSpacing="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="560" />
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>
                <ScrollView Grid.Row="0">

                    <VerticalStackLayout Spacing="10">

                        <Label Text="{Binding Plant.PlantSpecies, StringFormat='Plant Species: '}" />
                        <HorizontalStackLayout>
                            <Border>
                                <Entry MaximumWidthRequest="200" x:Name="_PlantSpecies" Placeholder="Enter plant species"  Text="{Binding Plant.PlantSpecies, StringFormat='{0}', Mode=TwoWay}"/>
                            </Border>
                        </HorizontalStackLayout>

                        <Label Text="Date Of Birth: " />
                        <HorizontalStackLayout>
                            <Border>
                                <DatePicker x:Name="_DateOfBirth" Date="{Binding Plant.DateOfBirth, Mode=TwoWay}" BackgroundColor="White" />
                            </Border>
                        </HorizontalStackLayout>

                        <Label Text="{Binding Plant.GivenName, StringFormat='Given Name: '}" />
                        <HorizontalStackLayout>
                            <Border>
                                <Entry MaximumWidthRequest="200"  x:Name="_GivenName" Placeholder="Give your plant a name!" Text="{Binding Plant.GivenName, StringFormat='{0}', Mode=TwoWay}"/>
                            </Border>
                        </HorizontalStackLayout>

                        <Label Text="Watering Interval: " />
                        <Border>
                            <Picker x:Name="waterIntervalPicker"
                            Title="Water in _ days"
                            SelectedItem="{Binding WaterIntervalPickerValue, Mode=TwoWay}"
                            ItemsSource="{Binding WateringInterval, Mode=TwoWay}"
                            ItemDisplayBinding="{Binding IntervalText, Mode=TwoWay}">
                            </Picker>
                        </Border>

                        <Grid x:Name="customWaterInteravlGrid" IsVisible="{Binding CustomWaterInteravlGridVisible}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Text="Custom Interval: " />
                            <Border Grid.Row="1" WidthRequest="150"  HorizontalOptions="Start">
                                <Entry x:Name="_CustomInterval" Placeholder="Enter an Interval" Keyboard="Numeric"/>
                            </Border>
                        </Grid>
                        


                        <Label Text="Water On: " />
                        <HorizontalStackLayout>
                            <Border>
                                <DatePicker x:Name="_DateOfNextWatering" Date="{Binding Plant.DateOfNextWatering, Mode=TwoWay}" Format="d" BackgroundColor="White" />
                            </Border>
                            <Label Text=" at " />
                            <Border>
                                <TimePicker x:Name="_TimeOfNextWatering" Time="{Binding Plant.TimeOfNextWatering, Mode=TwoWay}" Format="t" BackgroundColor="White" />
                            </Border>
                        </HorizontalStackLayout>

                        <Label Text="Last Watered On: " />
                        <HorizontalStackLayout>
                            <Border>
                                <DatePicker x:Name="_DateOfLastWatering" Date="{Binding Plant.DateOfLastWatering, Mode=TwoWay}" Format="d" BackgroundColor="White" />
                            </Border>
                            <Label Text=" at " />
                            <Border>
                                <TimePicker x:Name="_TimeOfLastWatering" Time="{Binding Plant.TimeOfLastWatering, Mode=TwoWay}" Format="t" BackgroundColor="White" />
                            </Border>
                        </HorizontalStackLayout>

                        <Button Text="Use Refreshing" 
                            x:Name="useRefreshing"
                            Command="{Binding UseRefreshingPressedCommand}"
                            CommandParameter="{Binding RefreshGridVisible}"/>

                        <Grid x:Name="refreshGrid" IsVisible="{Binding RefreshGridVisible}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.ColumnSpan="3" Text="Last Refreshed On: " />
                            <Border Grid.Row="1" Grid.Column="0">
                                <DatePicker x:Name="_DateOfLastRefreshing" Date="{Binding Plant.DateOfLastRefreshing, Mode=TwoWay}" Format="d" BackgroundColor="White" />
                            </Border>
                            <Label Text=" at " Grid.Row="1" Grid.Column="1" />
                            <Border Grid.Row="1" Grid.Column="2" >
                                <TimePicker x:Name="_TimeOfLastRefreshing" Time="{Binding Plant.TimeOfLastRefreshing, Mode=TwoWay}" Format="t" BackgroundColor="White" />
                            </Border>

                            <Label Grid.Row="2" Grid.ColumnSpan="3" Text="Refresh On: " />
                            <Border Grid.Row="3" Grid.Column="0">
                                <DatePicker x:Name="_DateOfNextRefreshing" Date="{Binding Plant.DateOfNextRefreshing, Mode=TwoWay}" Format="d" BackgroundColor="White" />
                            </Border>
                            <Label Text=" at " Grid.Row="3" Grid.Column="1" />
                            <Border Grid.Row="3" Grid.Column="2">
                                <TimePicker x:Name="_TimeOfNextRefreshing" Time="{Binding Plant.TimeOfNextRefreshing, Mode=TwoWay}" Format="t" BackgroundColor="White" />
                            </Border>
                        </Grid>
                        
                        
                        
                        <!--<Label Text="Last Refreshed On: " />
                        <HorizontalStackLayout>
                            <Border>
                                <DatePicker x:Name="_DateOfLastRefreshing" Date="{Binding Plant.DateOfLastRefreshing, Mode=TwoWay}" Format="d" BackgroundColor="White" />
                            </Border>
                            <Label Text=" at " />
                            <Border>
                                <TimePicker x:Name="_TimeOfLastRefreshing" Time="{Binding Plant.TimeOfLastRefreshing, Mode=TwoWay}" Format="t" BackgroundColor="White" />
                            </Border>
                        </HorizontalStackLayout>

                        <Label Text="Refresh On: " />
                        <HorizontalStackLayout>
                            <Border>
                                <DatePicker x:Name="_DateOfNextRefreshing" Date="{Binding Plant.DateOfNextRefreshing, Mode=TwoWay}" Format="d" BackgroundColor="White" />
                            </Border>
                            <Label Text=" at " />
                            <Border>
                                <TimePicker x:Name="_TimeOfNextRefreshing" Time="{Binding Plant.TimeOfNextRefreshing, Mode=TwoWay}" Format="t" BackgroundColor="White" />
                            </Border>
                        </HorizontalStackLayout>-->
                    </VerticalStackLayout>

                </ScrollView>
                <HorizontalStackLayout Spacing="10" Grid.Row="1">
                    <Button Text="Go Back" 
                            x:Name="goBack"
                            IsEnabled="{Binding IsNotBusy}"
                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:PlantDetailsViewModel}}, Path=GoToTableCommand}"/>
                    <Button Text="Update"
                            x:Name="addUpdate"
                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:PlantDetailsViewModel}}, Path=AddUpdateCommand}"
                            CommandParameter= "{Binding Plant}"
                            IsEnabled="{Binding IsNotBusy}"/>
                    <Button Text="Delete" 
                            x:Name="deletePlants"
                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:PlantDetailsViewModel}}, Path=DeleteCommand}"
                            CommandParameter= "{Binding Plant}"
                            IsEnabled="{Binding IsNotBusy}"/>
                </HorizontalStackLayout>
            </Grid>
        </Frame>
        
        
        <Label
                x:Name="friendlyNotification"
                Text="{Binding FriendlyLabel}"
                >
        </Label>
    </VerticalStackLayout>
</ContentPage>
